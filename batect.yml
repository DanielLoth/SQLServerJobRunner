config_variables:
  MSSQL_SA_PASSWORD:
    default: NeverGonnaGiveY0uUp
  MASTER_KEY_PASSWORD:
    default: NowYouSitLikeACobwebCatchingTheWind2020
  HADR_LOGIN_NAME:
    default: hadr_login
  HADR_LOGIN_PASSWORD:
    default: RunningThroughTheFireRunningThroughTheFlame2010
  HADR_USER_NAME:
    default: hadr_user
  HADR_CERT_NAME:
    default: hadr_cert
  HADR_CERT_PASSWORD:
    default: DoILookThankfulToYou2022
  HADR_CERT_FILE:
    default: /sql-shared/certificate/cert.cert
  HADR_CERT_PRIVATE_KEY_FILE:
    default: /sql-shared/certificate/cert.key
  HADR_ENDPOINT_NAME:
    default: hadr_endpoint
  HADR_ENDPOINT_PORT:
    default: "5022"
  HADR_AG_NAME:
    default: AG1

containers:
  alpine:
    image: alpine:latest
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

  sqltools:
    image: mcr.microsoft.com/mssql-tools:latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

#   build:
#     image: mcr.microsoft.com/dotnet/sdk:7.0
#     working_directory: /build
#     environment:
#       DOTNET_NOLOGO: 'true'
#       DOTNET_CLI_TELEMETRY_OPTOUT: 1

  build:
    build_directory: ./
    dockerfile: build-dockerfile
    working_directory: /code
    environment:
      DOTNET_NOLOGO: 'true'
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

  single-setup:
    image: mcr.microsoft.com/mssql-tools:latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared
    setup_commands:
      - command: /sql-shared/setup-single.sh

  cluster-setup:
    image: mcr.microsoft.com/mssql-tools:latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      HADR_LOGIN_NAME: <{HADR_LOGIN_NAME}
      HADR_LOGIN_PASSWORD: <{HADR_LOGIN_PASSWORD}
      HADR_USER_NAME: <{HADR_USER_NAME}
      HADR_CERT_NAME: <{HADR_CERT_NAME}
      HADR_CERT_PASSWORD: <{HADR_CERT_PASSWORD}
      HADR_CERT_FILE: <{HADR_CERT_FILE}
      HADR_CERT_PRIVATE_KEY_FILE: <{HADR_CERT_PRIVATE_KEY_FILE}
      HADR_ENDPOINT_NAME: <{HADR_ENDPOINT_NAME}
      HADR_ENDPOINT_PORT: <{HADR_ENDPOINT_PORT}
      HADR_AG_NAME: <{HADR_AG_NAME}
      MASTER_KEY_PASSWORD: <{MASTER_KEY_PASSWORD}
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared
    setup_commands:
      - command: /sql-shared/setup-cluster.sh

  single2019:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
    ports:
      - local: 14331
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

  s2019n1:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
      MSSQL_ENABLE_HADR: "1"
    ports:
      - local: 14331
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared
  s2019n2:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
      MSSQL_ENABLE_HADR: "1"
    ports:
      - local: 14332
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

  single2022:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
    ports:
      - local: 14331
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

  s2022n1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
      MSSQL_ENABLE_HADR: "1"
    ports:
      - local: 14331
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared
  s2022n2:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: <{MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
      MSSQL_ENABLE_HADR: "1"
    ports:
      - local: 14332
        container: 1433
    health_check:
      command: /opt/mssql-tools/bin/sqlcmd -U sa -S "127.0.0.1,1433" -P $MSSQL_SA_PASSWORD -Q "select 1" || exit 1
      interval: 2s
      retries: 100
      start_period: 5s
      timeout: 2s
    volumes:
      - local: .batect/sql-shared
        container: /sql-shared

tasks:
  run-s2019n1:
    run:
      container: s2019n1

  run-single-2019:
    dependencies:
      - single2019
    run:
      container: single-setup
      environment:
        SERVER_HOSTNAME: single2019

  run-cluster-2019:
    dependencies:
      - s2019n1
      - s2019n2
    run:
      container: cluster-setup
      environment:
        NODE1_HOSTNAME: s2019n1
        NODE2_HOSTNAME: s2019n2

  run-single-2022:
    dependencies:
      - single2022
    run:
      container: single-setup
      environment:
        SERVER_HOSTNAME: single2022

  run-cluster-2022:
    dependencies:
      - s2022n1
      - s2022n2
    run:
      container: cluster-setup
      environment:
        NODE1_HOSTNAME: s2022n1
        NODE2_HOSTNAME: s2022n2

  build-sqlproj:
    description: Build solution
    run:
      container: build
      command: ls
